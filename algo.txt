Cas d'erreur
- n'arrive pas à ouvrir un dossier / fichier
- chemin mentionné n'existe pas
- les droits ne permettent pas le listage par ls

Cas à traiter
* droits (avec / sans).
* types de fichiers
	- Regular file
	- directory
	- character device (?)
	- block device
	- FIFO or pipe
	- socket
	- symbolic link vers file et vers dossier
	- shared memory object (?) => page 282, ref chap 54
	- checker potentiels autres dans sys/stat.h
* devices (/dev) 
* dossier vide, dossier ".", dossier ".."

OPTIONS A GERER
- a Include directory entries whose names begin with a dot (.).
- l (The lowercase letter ``ell''.)  List in long format.  (See below.)  If the output is to a terminal, a total sum for all the file sizes is output on a line before the long listing.
-R Recursively list subdirectories encountered.
-r Reverse the order of the sort to get reverse lexicographical order or the oldest entries first (or largest files last, if combined with sort by size
-t Sort by time modified (most recently modified first) before sorting the operands by lexicographical order.

OPTIONS FACULTATIVES
-d Directories are listed as plain files (not searched recursively).
-f Output is not sorted.  This option turns on the -a option.
-u Use time of last access, instead of last modification of the file for sorting (-t) or long printing (-l).
- gérer les colonnes avec tty (cf chap 62 p 1289).

NOTES
- cas spécial d'un fichier : comme une liste d'un seul élément
- un ou plusieurs dossiers de départ
- un ordre de tri (de base ASCII)
- des choix d'affichage
- des options pour multiples actions : simple ou liste, récursif
trouver la taille mini a partir de laquelle on abandonne l'affichage par colonnes.
faire des macros pour rendre le programme portable meme avec l'inode 64
verifier que nftw fait exactement ce qu'on veut avant de la dupliquer
verifier comment marche le recursif avec les liens vers des dossiers, avec les options qui les dereferencent et celles qui ne les dereferencent pas.
3eme paragraphe http://pubs.opengroup.org/onlinepubs/000095399/utilities/ls.html
valeur de retour ?
Pour savoir si le message est sur la stderr (sortie 2) , rajoute 2>/dev/null après ton ls
slack : utiliser arg[0] ?
ne pas oublier de mettre les couleurs pour les liens symboliques etc.
pourquoi ls -l /dev/zero donne comme resultat
	crw-rw-rw-  1 root  wheel    3,   3 Feb 14 11:00 /dev/zero
(préfixé)

Avec l'option -R, on peut repasser deux fois dans la meme arborescence.


==========================DEROULEMENT=================================
- on lit les options éventuelles.
- si zero argument, lance la fonction principale sur dossier actuel.
- si un seul argument, lance la fonction sur le dossier demandé, avec check d'erreurs.
- si plusieurs arguments, on checke pour chacun la validité puis on le pousse dans une des deux listes chainees (ou tableaux) : un de fichiers, un de dossiers.
- puis on fait une passe des fichiers valides demandés, s'il y en a, avec l'ordre et les options demandées.
- puis une passe des dossiers où l'on lance la fonction principale sur chaque dossier.
- 

FLAGS
- multiple inputs


STRUCTURE DE DONNEES
- 


The usageErr() function is used to diagnose errors in command-line argument usage. It takes an argument list in the style of printf() and prints the string Usage: followed by the formatted output on standard error, and then terminates the pro- gram by calling exit().
The cmdLineErr() function is similar to usageErr(), but is intended for diagnosing errors in the command-line arguments specified to a program.
The i-node number (or simply i-number) of a file is the first field displayed by the ls –li command.

stat() returns information about a named file;
lstat() is similar to stat(), except that if the named file is a symbolic link, infor- mation about the link itself is returned, rather than the file to which the link points
The stat() and lstat() system calls don’t require permissions on the file itself. However, execute (search) permission is required on all of the parent directories specified in pathname.

!! a partir de la page 280 ca repond a tous les besoins.

The major and minor IDs of a dev_t value can be extracted using two macros: major() and minor(). The header file required to obtain the declarations of these two macros varies across UNIX implementations. On Linux, they are exposed by <sys/types.h> if the _BSD_SOURCE macro is defined.
=> vérifier que c'est dans la norme vu qu'il s'agit de macros et non de fonctions, mais ca m'étonnerait.

revoir cette histoire de holes (section 4.7).

some Linux distributions alias the ls command to include flags (e.g., –F) that require access to i-node information for files in the directory, and this requires execute permission on the directory. To ensure that we are using an unadulterated ls, we can specify the full pathname of the command (/bin/ls).

If the sticky bit for a file is set, ls –l shows a lowercase or uppercase letter T in the other-execute permission field, depending on whether the other-execute permission bit is on or off.

chflags:
UF_NODUMP      Do not dump the file.
UF_IMMUTABLE   The file may not be changed.
UF_APPEND      The file may only be appended to.
UF_OPAQUE      The directory is opaque when viewed through a union stack.
UF_HIDDEN      The file or directory is not intended to be displayed to the user.
SF_ARCHIVED    The file has been archived.
SF_IMMUTABLE   The file may not be changed.
SF_APPEND      The file may only be appended to.

The opendir() function opens the directory specified by dirpath and returns a pointer to a structure of type DIR. This structure is a so-called directory stream, which is a handle that the caller passes to the other functions.


The nftw() function allows a program to recursively walk through an entire direc- tory subtree performing some operation (i.e., calling some programmer-defined function) for each file in the subtree.
=> p 358, A IMPLEMENTER !! mais en verifiant d'abord que le vrai ls fait une traversee depth-first et non pas breadth first.
!! semble deprecie => remplacer par les fonctions fts. The fts functions are provided for traversing UNIX file hierarchies.
 
Using the information in the d_type field saves the cost of calling lstat() in order to discover the file type.

Further information about the file referred to by d_name can be obtained by calling stat() on the pathname constructed using the dirpath argument that was specified to opendir() concatenated with (a slash and) the value returned in the d_name field.

The command ls –f lists files in the same unsorted order that they would be retrieved by readdir().

On end-of-directory or error, readdir() returns NULL, in the latter case setting errno to indicate the error. To distinguish these two cases, we can write the following:
	errno = 0;
	direntp = readdir(dirp);
	if (direntp == NULL) {
		if (errno != 0) {
			/* Handle error */
		} else {
			/* We reached end-of-directory */
		} }

!! programme similaire a partir de la page 356
